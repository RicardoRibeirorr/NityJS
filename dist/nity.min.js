var Nity=(()=>{var T=Object.defineProperty;var W=Object.getOwnPropertyDescriptor;var z=Object.getOwnPropertyNames;var F=Object.prototype.hasOwnProperty;var q=(i,t)=>{for(var e in t)T(i,e,{get:t[e],enumerable:!0})},H=(i,t,e,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of z(t))!F.call(i,o)&&o!==e&&T(i,o,{get:()=>t[o],enumerable:!(s=W(t,o))||s.enumerable});return i};var _=i=>H(T({},"__esModule",{value:!0}),i);var J={};q(J,{BoxColliderComponent:()=>Y,CameraComponent:()=>E,CircleColliderComponent:()=>P,Component:()=>l,FollowTarget:()=>I,Game:()=>g,GameObject:()=>b,ImageComponent:()=>U,Input:()=>d,Instantiate:()=>v,MovementComponent:()=>D,Random:()=>A,RigidbodyComponent:()=>k,Scene:()=>B,ShapeComponent:()=>X,Sprite:()=>L,SpriteAnimationClip:()=>K,SpriteAnimationComponent:()=>O,SpriteAsset:()=>R,SpriteRegistry:()=>f,SpriteRendererComponent:()=>x,SpritesheetAsset:()=>G,Time:()=>m});var f=class{static sprites=new Map;static spritesheets=new Map;static _addSprite(t,e){this.sprites.set(t,e)}static _addSpritesheet(t,e){this.spritesheets.set(t,e)}static getSprite(t){return this.sprites.get(t)||null}static getSpritesheet(t){return this.spritesheets.get(t)||null}static async preloadAll(){let t=Array.from(this.sprites.values()).filter(s=>s.load&&typeof s.load=="function").map(s=>s.isLoaded?Promise.resolve():s.load()),e=Array.from(this.spritesheets.values()).map(s=>s.isLoaded?Promise.resolve():s.load());await Promise.all([...t,...e])}static hasSprite(t){return this.sprites.has(t)}static hasSpritesheet(t){return this.spritesheets.has(t)}static getSpriteNames(){return Array.from(this.sprites.keys())}static getSpritesheetNames(){return Array.from(this.spritesheets.keys())}static getSpritesFromSheet(t){let e=[];for(let s of this.sprites.keys())s.startsWith(t+":")&&e.push(s);return e}static clear(){this.sprites.clear(),this.spritesheets.clear()}static removeSprite(t){return this.sprites.delete(t)}static removeSpritesheet(t){return this.spritesheets.delete(t)}constructor(){this.sheets=new Map,console.warn("SpriteRegistry instance methods are deprecated. Use static methods instead.")}add(t){console.warn("SpriteRegistry.add() is deprecated. Use new SpritesheetAsset() instead."),this.sheets.set(t.name,t)}async preload(){console.warn("SpriteRegistry.preload() is deprecated. Use SpriteRegistry.preloadAll() instead.");for(let t of this.sheets.values())await t.load()}getSheet(t){return console.warn("SpriteRegistry.getSheet() is deprecated. Use SpriteRegistry.getSpritesheet() instead."),this.sheets.get(t)}};var l=class{constructor(){this.gameObject=null,this.enabled=!0,this._started=!1}__lateStart(){}__update(){}__draw(t){this.enabled&&typeof this.draw=="function"&&this.draw(t)}__preload(){}start(){}update(){}draw(t){}async preload(){}destroy(){}lateUpdate(){}};var E=class extends l{constructor(t,e=1){super(),this.canvas=t,this.zoom=e}applyTransform(t){let e=this.gameObject.getGlobalX(),s=this.gameObject.getGlobalY();t.setTransform(this.zoom,0,0,this.zoom,-e*this.zoom+this.canvas.width/2,-s*this.zoom+this.canvas.height/2)}};var d=class i{static keys=new Set;static pressedKeys=new Set;static releasedKeys=new Set;static previousKeys=new Set;static mouseButtons=new Set;static pressedMouseButtons=new Set;static releasedMouseButtons=new Set;static previousMouseButtons=new Set;static mousePosition={x:0,y:0};static lastMousePosition={x:0,y:0};static onKeyDown=new Map;static onKeyStay=new Map;static onKeyUp=new Map;static onMouseDown=new Map;static onMouseStay=new Map;static onMouseUp=new Map;static onMouseMove=new Set;static canvas=null;static initialize(t=null){i.canvas=t,window.addEventListener("keydown",s=>{let o=s.key.toLowerCase();if(!i.keys.has(o)){i.pressedKeys.add(o);let r=i.onKeyDown.get(o);r&&r(o)}i.keys.add(o)}),window.addEventListener("keyup",s=>{let o=s.key.toLowerCase();i.keys.delete(o),i.releasedKeys.add(o);let r=i.onKeyUp.get(o);r&&r(o)});let e=t||window;e.addEventListener("mousedown",s=>{let o=s.button;if(!i.mouseButtons.has(o)){i.pressedMouseButtons.add(o);let r=i.onMouseDown.get(o);r&&r(o,i.mousePosition)}i.mouseButtons.add(o),i.updateMousePosition(s)}),e.addEventListener("mouseup",s=>{let o=s.button;i.mouseButtons.delete(o),i.releasedMouseButtons.add(o);let r=i.onMouseUp.get(o);r&&r(o,i.mousePosition),i.updateMousePosition(s)}),e.addEventListener("mousemove",s=>{i.updateMousePosition(s);for(let o of i.onMouseMove)o(i.mousePosition,i.lastMousePosition)}),t&&t.addEventListener("contextmenu",s=>s.preventDefault())}static updateMousePosition(t){if(i.lastMousePosition={...i.mousePosition},i.canvas){let e=i.canvas.getBoundingClientRect();i.mousePosition.x=t.clientX-e.left,i.mousePosition.y=t.clientY-e.top}else i.mousePosition.x=t.clientX,i.mousePosition.y=t.clientY}static update(){for(let t of i.keys)if(i.previousKeys.has(t)){let e=i.onKeyStay.get(t);e&&e(t)}for(let t of i.mouseButtons)if(i.previousMouseButtons.has(t)){let e=i.onMouseStay.get(t);e&&e(t,i.mousePosition)}i.pressedKeys.clear(),i.releasedKeys.clear(),i.pressedMouseButtons.clear(),i.releasedMouseButtons.clear(),i.previousKeys=new Set(i.keys),i.previousMouseButtons=new Set(i.mouseButtons)}static isKeyDown(t){return i.keys.has(t.toLowerCase())}static isKeyPressed(t){return i.pressedKeys.has(t.toLowerCase())}static isKeyReleased(t){return i.releasedKeys.has(t.toLowerCase())}static isMouseDown(t=0){return i.mouseButtons.has(t)}static isMousePressed(t=0){return i.pressedMouseButtons.has(t)}static isMouseReleased(t=0){return i.releasedMouseButtons.has(t)}static getMousePosition(){return{...i.mousePosition}}static getMouseDelta(){return{x:i.mousePosition.x-i.lastMousePosition.x,y:i.mousePosition.y-i.lastMousePosition.y}}static isLeftMouseDown(){return i.isMouseDown(0)}static isLeftMousePressed(){return i.isMousePressed(0)}static isRightMouseDown(){return i.isMouseDown(2)}static isRightMousePressed(){return i.isMousePressed(2)}static onKeyDownEvent(t,e){i.onKeyDown.set(t.toLowerCase(),e)}static onKeyStayEvent(t,e){i.onKeyStay.set(t.toLowerCase(),e)}static onKeyUpEvent(t,e){i.onKeyUp.set(t.toLowerCase(),e)}static onMouseDownEvent(t=0,e){i.onMouseDown.set(t,e)}static onMouseStayEvent(t=0,e){i.onMouseStay.set(t,e)}static onMouseUpEvent(t=0,e){i.onMouseUp.set(t,e)}static onMouseMoveEvent(t){i.onMouseMove.add(t)}static onLeftClickEvent(t){i.onMouseDownEvent(0,t)}static onRightClickEvent(t){i.onMouseDownEvent(2,t)}static removeKeyEvent(t,e){let s=e.toLowerCase();switch(t){case"down":i.onKeyDown.delete(s);break;case"stay":i.onKeyStay.delete(s);break;case"up":i.onKeyUp.delete(s);break}}static removeMouseEvent(t,e){switch(t){case"down":i.onMouseDown.delete(e);break;case"stay":i.onMouseStay.delete(e);break;case"up":i.onMouseUp.delete(e);break;case"move":i.onMouseMove.delete(e);break}}static clearAllEvents(){i.onKeyDown.clear(),i.onKeyStay.clear(),i.onKeyUp.clear(),i.onMouseDown.clear(),i.onMouseStay.clear(),i.onMouseUp.clear(),i.onMouseMove.clear()}};var p=class extends l{constructor(){super(),this.trigger=!1,this._lastCollisions=new Set}isTrigger(){return this.trigger===!0}start(){c.instance.register(this)}destroy(){c.instance.unregister(this)}checkCollisionWith(t){throw new Error("checkCollisionWith must be implemented")}getBounds(){throw new Error("getBounds must be implemented")}};var c=class i{constructor(){this.colliders=new Set,i.instance=this}register(t){this.colliders.add(t)}unregister(t){this.colliders.delete(t)}update(){}intersects(t,e){return t instanceof p&&e instanceof p?t.checkCollisionWith(e):(console.warn("INTERNAL_ERROR:At least one object is not an collider component:",t,e),!1)}};c.instance=void 0;var b=class i{constructor(t=0,e=0){this.x=t,this.y=e,this.components=[],this.children=[],this.parent=null,this.name="",this.tags=new Set,this.paused=!1}addComponent(t){if(!(t instanceof l))throw new Error('addComponent: property "component" must be an instance of Component');if(this.getComponent(t.constructor))throw new Error(`Component of type ${t.constructor.name} already exists on this GameObject.`);return t.gameObject=this,this.components.push(t),t}getComponent(t){if(typeof t!="function"||!t.prototype)throw new Error('getComponent: property "type" must be a class');return this.components.find(e=>e instanceof t)}hasComponent(t){if(typeof t!="function"||!t.prototype)throw new Error('hasComponent: property "type" must be a class');return!!this.getComponent(t)}removeComponent(t){let e=this.components.findIndex(s=>s instanceof t);e!==-1&&(this.components[e].destroy?.(),this.components.splice(e,1))}getComponentInChildren(t){if(typeof t!="function"||!t.prototype)throw new Error('hasComponent: property "type" must be a class');return this.children.find(e=>e.hasComponent(t)).getComponent(t)}hasTag(t){return this.tags.has(t)}addTag(t){this.tags.add(t)}__addChild(t){if(!(t instanceof i))throw new Error(`Nity2D: method 'addChild' only accepts GameObject, '${typeof t}' provided`);this.children.push(t),t.parent=this}addChild(t){v.create(t,{x:this.x,y:this.y,parent:this,addToScene:!0})}addChildren(t){if(!Array.isArray(t))throw new Error(`Nity2D: method 'addChildren' only accepts array '${typeof t}' provided`);t.forEach(e=>this.addChild(e))}removeChild(t){let e=this.children.indexOf(t);e!==-1&&(t.parent=null,this.children.splice(e,1))}getGlobalX(){return this.parent?this.x+this.parent.getGlobalX():this.x}getGlobalY(){return this.parent?this.y+this.parent.getGlobalY():this.y}async preload(){let t=this.components.map(e=>e.preload?.());for(let e of this.children)t.push(e.preload?.());await Promise.all(t)}start(){for(let t of this.components)t.enabled&&typeof t.start=="function"&&t.start();for(let t of this.children)t.start()}update(){if(!this.paused){for(let t of this.components)t.enabled&&typeof t.update=="function"&&t.update();for(let t of this.children)t.update()}}lateUpdate(){if(!this.paused){for(let t of this.components)t.enabled&&typeof t.lateUpdate=="function"&&t.lateUpdate();for(let t of this.children)t.lateUpdate()}}onCollisionEnter(t){for(let e of this.components)typeof e.onCollisionEnter=="function"&&e.onCollisionEnter(t)}onCollisionStay(t){for(let e of this.components)typeof e.onCollisionStay=="function"&&e.onCollisionStay(t)}onCollisionExit(t){for(let e of this.components)typeof e.onCollisionExit=="function"&&e.onCollisionExit(t)}__draw(t){if(!this.paused){for(let e of this.components)e.__draw(t);for(let e of this.children)e.__draw(t)}}};var v=class i{static create(t,e={},...s){let{x:o,y:r,parent:n=null,addToScene:a=!0}=e,h;if(typeof t=="function")h=new t(o??0,r??0,...s);else if(t instanceof b)h=t,o!==void 0&&(h.x=o),r!==void 0&&(h.y=r);else throw new Error("Instantiate.create: prefab must be a GameObject instance or constructor function");if(n){if(!(n instanceof b))throw new Error("Instantiate.create: parent must be a GameObject instance");n.__addChild(h)}return a&&!n&&g.instance?.scene&&g.instance.scene.__addObjectToScene(h),i._registerGameObject(h),h}static _registerGameObject(t){for(let e of t.components)i._registerComponent(e);for(let e of t.children)i._registerGameObject(e)}static _registerComponent(t){console.log("Instantiate: Registering component:",t.constructor.name),t instanceof p&&(console.log("Instantiate: Found collider component, registering..."),c.instance?(c.instance.register(t),console.log("Collider registered with CollisionSystem:",t,"Total colliders:",c.instance.colliders.size)):(console.warn("CollisionSystem not initialized. Collider will be registered when system is available:",t),i._pendingColliders||(i._pendingColliders=[]),i._pendingColliders.push(t))),typeof t.start=="function"&&(console.log("Instantiate: Calling start() on component:",t.constructor.name),t.start())}static registerPendingColliders(){if(i._pendingColliders&&c.instance){console.log("Registering pending colliders:",i._pendingColliders.length);for(let t of i._pendingColliders)c.instance.register(t);i._pendingColliders=[]}}static destroy(t){if(!(t instanceof b))throw new Error("Instantiate.destroy: gameObject must be a GameObject instance");for(let e of[...t.children])i.destroy(e);for(let e of t.components)i._unregisterComponent(e);if(t.parent&&t.parent.removeChild(t),g.instance?.scene){let e=g.instance.scene.objects.indexOf(t);e!==-1&&g.instance.scene.objects.splice(e,1)}}static _unregisterComponent(t){t instanceof p&&c.instance&&c.instance.unregister(t),typeof t.destroy=="function"&&t.destroy()}static clone(t,e={}){if(!(t instanceof b))throw new Error("Instantiate.clone: original must be a GameObject instance");let s=new b(t.x,t.y);s.name=t.name,s.tags=new Set(t.tags);for(let h of t.components){let u=h.constructor,y=new u;for(let w in h)h.hasOwnProperty(w)&&w!=="gameObject"&&(y[w]=h[w]);s.addComponent(y)}for(let h of t.children){let u=i.clone(h,{addToScene:!1});s.__addChild(u)}let{x:o=s.x,y:r=s.y,parent:n=null,addToScene:a=!0}=e;return s.x=o,s.y=r,n&&n.__addChild(s),a&&!n&&g.instance?.scene&&g.instance.scene.__addObjectToScene(s),i._registerGameObject(s),s}};var g=class i{#t=!1;constructor(t){i.instance=this,this.canvas=t,this.ctx=t.getContext("2d"),this.scene=null,this._lastTime=0,this.mainCamera=null,this.paused=!1,this.#t=!1,this._deltaTime=0,new c,v.registerPendingColliders()}launch(t){if(!t)throw new Error("No scene assigned to game.");this.#i(),this.#e(t)}async#e(t){await this.loadScene(t),this.start()}async loadScene(t){if(!t)throw new Error("No scene provided.");this.scene=t,typeof t._create=="function"&&(t._create(t),t._create=null),await f.preloadAll(),await this.scene.preload(),await this.scene.start(),this.start()}start(){d.initialize(this.canvas),this.#s(),requestAnimationFrame(this.loop.bind(this))}loop(t){if(this._deltaTime=(t-this._lastTime)/1e3,this._deltaTime>.1&&(this._deltaTime=.1),this._lastTime=t,this.ctx.setTransform(1,0,0,1,0,0),this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),!this.#t){if(!this.paused&&(d.update(),this.scene.__update(),this.mainCamera)){let e=this.mainCamera.getComponent(E);e&&e.applyTransform(this.ctx)}this.scene.__lateUpdate(),this.scene.__draw(this.ctx)}requestAnimationFrame(this.loop.bind(this))}pause(){this.paused=!0}resume(){this.paused=!1}#r(){this.#t!==!0&&(this.#t=!0,console.log("Game fullscale pause"))}#n(){this.#t!==!1&&(this.#t=!1,this._lastTime=performance.now(),console.log("Game fullscale resume"))}#s(){document.addEventListener("visibilitychange",()=>{document.hidden?this.#r():this.#n()})}#i(){if(!this.canvas){console.warn("No canvas element provided.");return}this.ctx||console.error("Failed to get 2D context from canvas."),this.ctx.imageSmoothingEnabled=!1,this.ctx.mozImageSmoothingEnabled=!1,this.ctx.webkitImageSmoothingEnabled=!1}};g.instance=null;var m=class{static deltaTime(){return g.instance._deltaTime}};var K=class{constructor(t,e=[],s=10,o=!0){this.name=t,this.spriteNames=e,this.fps=s,this.loop=o}};var x=class extends l{constructor(t,e=null){super(),e!==null?(console.warn(`SpriteRendererComponent: Two-parameter constructor is deprecated. Use "${t}:${e}" instead.`),this.spriteKey=`${t}:${e}`):this.spriteKey=t,this.sprite=null}preload(){if(this.sprite=f.getSprite(this.spriteKey),!this.sprite)throw new Error(`Sprite '${this.spriteKey}' not found in SpriteRegistry. Make sure the sprite or spritesheet is loaded.`)}__draw(t){if(!this.sprite||!this.sprite.image||!this.sprite.isLoaded)return;let e=this.gameObject.getGlobalX(),s=this.gameObject.getGlobalY();this.sprite.draw(t,e,s,null,null,this.gameObject.rotation||0)}setSprite(t){this.spriteKey=t,this.sprite=f.getSprite(t),this.sprite||console.warn(`Sprite '${t}' not found in SpriteRegistry.`)}};var O=class extends l{constructor(t=null){super(),this.clips=new Map,this.currentClip=null,this.currentFrame=0,this.autoPlay=!0,this.time=0,this.defaultClipName=t}start(){this.autoPlay&&this.defaultClipName&&this.play(this.defaultClipName)}addClip(t){this.clips.set(t.name,t)}play(t){let e=this.clips.get(t);if(!e)throw new Error(`Animation clip '${t}' not found.`);this.currentClip=e,this.currentFrame=0,this.time=0,this._applyFrame()}update(){if(!this.currentClip)return;this.time+=m.deltaTime();let t=1/this.currentClip.fps;if(this.time>=t){if(this.time-=t,this.currentFrame++,this.currentFrame>=this.currentClip.spriteNames.length)if(this.currentClip.loop)this.currentFrame=0;else{this.currentFrame=this.currentClip.spriteNames.length-1;return}this._applyFrame()}}_applyFrame(){let t=this.currentClip.spriteNames[this.currentFrame],e=this.gameObject.getComponent(x);e&&e.setSprite(t)}};var B=class{constructor({create:t}={}){this.objects=[],this._create=t}add(t){v.create(t)}__addObjectToScene(t){if(!(t instanceof b))throw new Error(`[Nity] Forbidden object '${t?t.constructor.name:null}' added to the scene. Accepts only 'GameObject'.`);this.objects.push(t)}findByName(t){return this.objects.find(e=>e.name===t)}findByTag(t){return this.objects.filter(e=>e.hasTag(t))}async preload(){typeof this._create=="function"?(this._create(this),this._create=null):console.log("Empty scene loaded");let t=this.objects.map(e=>e?.preload?.());await Promise.all(t)}async start(){for(let t of this.objects)typeof t?.start=="function"&&t?.start();setTimeout(()=>{},500)}update(){}lateUpdate(){}__update(){for(let t of this.objects)typeof t?.update=="function"&&t?.update();c.instance?c.instance?.update():console.warn("Scene: CollisionSystem.instance is null!"),this?.update()}__lateUpdate(){for(let t of this.objects)typeof t.lateUpdate=="function"&&t?.lateUpdate();this?.lateUpdate()}__draw(t){for(let e of this.objects)e.__draw(t)}};var j=class extends l{constructor(t={gravityScale:300}){super(),this.gravity=!0,this.gravityScale=t.gravityScale||300,this.velocity={x:0,y:0}}update(){this.gravity&&(this.velocity.y+=this.gravityScale*m.deltaTime())}_doMove(t,e){this.gameObject.x+=t,this.gameObject.y+=e}};var k=class i extends j{#t;#e=new Set;bounciness=0;gravity=!1;gravityScale=300;constructor(t={gravity:!1,gravityScale:300,bounciness:0}){super(t),this.gravity=t.gravity!=null?t.gravity:!1,this.bounciness=t.bounciness||0}start(){this.#t=this.gameObject.getComponent(p),this.#t||console.warn("RigidbodyComponent requires a collider.")}update(){super.update(),this.move(this.velocity.x*m.deltaTime(),this.velocity.y*m.deltaTime())}move(t,e){if(!this.#t)return!0;let s=Math.max(Math.abs(t),Math.abs(e)),o=Math.max(1,Math.ceil(s/.25)),r=t/o,n=e/o,a=new Set,h=!1,u={x:0,y:0};for(let y=0;y<o;y++){let w=this.gameObject.x,S=this.gameObject.y;this._doMove(r,n),u.x+=r,u.y+=n;for(let M of c.instance.colliders){if(M===this.#t||!this.#t.checkCollisionWith(M))continue;let C=M.gameObject;a.add(C);let $=this.#e.has(C),N=this.#t.isTrigger()||M.isTrigger();if($?(this.#i(this.gameObject,C),C.hasComponent?.(i)||this.#i(C,this.gameObject)):(this.#s(this.gameObject,C),C.hasComponent?.(i)||this.#s(C,this.gameObject)),!N&&!h){this.gameObject.x=w,this.gameObject.y=S,Math.abs(n)>Math.abs(r)?this.velocity.y*=-this.bounciness:this.velocity.x*=-this.bounciness,h=!0;break}}if(h)break}return this.#r(a),this.#e=a,!0}#r(t){for(let e of this.#e)if(!t.has(e)){let s=e.getComponent(p);s?this.#n(s,2.5)?t.add(e):(this.#o(this.gameObject,e),e?.hasComponent?.(i)||this.#o(e,this.gameObject)):(this.#o(this.gameObject,e),e?.hasComponent?.(i)||this.#o(e,this.gameObject))}}#n(t,e=2){let s=this.#t.getBounds(),o=t.getBounds();return s.x<o.x+o.width+e&&s.x+s.width+e>o.x&&s.y<o.y+o.height+e&&s.y+s.height+e>o.y}#s(t,e){t?.getComponent?.(p)?.isTrigger()?t?.onTriggerEnter?.(e):t?.onCollisionEnter?.(e)}#i(t,e){t?.getComponent?.(p)?.isTrigger()?t?.onTriggerStay?.(e):t?.onCollisionStay?.(e)}#o(t,e){t?.getComponent?.(p)?.isTrigger()?t?.onTriggerExit?.(e):t?.onCollisionExit?.(e)}_doMove(t,e){this.gameObject.x+=t,this.gameObject.y+=e}};var D=class extends l{rigidbody;constructor(t=100){super(),this.speed=t}start(){this.rigidbody=this.gameObject.getComponent(k),this.rigidbody||console.warn("MovementComponent requires RigidbodyComponent to function properly.")}update(){let t=0,e=0;(d.isKeyDown("ArrowRight")||d.isKeyDown("d")||d.isKeyDown("D"))&&(t+=this.speed*m.deltaTime()),(d.isKeyDown("ArrowLeft")||d.isKeyDown("a")||d.isKeyDown("A"))&&(t-=this.speed*m.deltaTime()),(d.isKeyDown("ArrowDown")||d.isKeyDown("s")||d.isKeyDown("S"))&&(e+=this.speed*m.deltaTime()),(d.isKeyDown("ArrowUp")||d.isKeyDown("w")||d.isKeyDown("W"))&&(e-=this.speed*m.deltaTime()),(t!==0||e!==0)&&this.rigidbody.move(t,e)}};var L=class{constructor(t,e,s,o,r){this.image=t,this.x=e,this.y=s,this.width=o,this.height=r}};var R=class i{constructor(t,e,s={}){if(t.includes(":"))throw new Error(`SpriteAsset name "${t}" cannot contain colons. Colons are reserved for spritesheet sprite notation (e.g., "sheet:sprite").`);this.name=t,this.imagePath=e,this.image=null,this.isLoaded=!1,this.width=s.width||null,this.height=s.height||null,this.pivotX=s.pivotX||.5,this.pivotY=s.pivotY||.5,this.#t(),this.load()}#t(){f._addSprite(this.name,this)}load(){return new Promise((t,e)=>{this.image=new Image,this.image.onload=()=>{this.isLoaded=!0,this.width||(this.width=this.image.width),this.height||(this.height=this.image.height),t(this)},this.image.onerror=e,this.image.src=this.imagePath})}draw(t,e,s,o,r,n=0,a=1,h=1){if(!this.isLoaded)return;let u=o||this.width,y=r||this.height;t.save(),t.translate(e,s),n!==0&&t.rotate(n),t.scale(a,h);let w=-u*this.pivotX,S=-y*this.pivotY;t.drawImage(this.image,w,S,u,y),t.restore()}getBounds(t,e,s,o){let r=s||this.width,n=o||this.height;return{x:t-r*this.pivotX,y:e-n*this.pivotY,width:r,height:n}}clone(t={}){let e={width:this.width,height:this.height,pivotX:this.pivotX,pivotY:this.pivotY,...t};return new i(this.imagePath,e)}};var G=class{constructor(t,e,s){if(t.includes(":"))throw new Error(`SpritesheetAsset name "${t}" cannot contain colons. Colons are reserved for sprite notation within sheets.`);this.name=t,this.imagePath=e,this.spriteData=s,this.image=null,this.isLoaded=!1,this.sprites=new Map,this.generateSprites(),this._registerSelf(),this.load()}_registerSelf(){f._addSpritesheet(this.name,this),this._registerIndividualSprites()}load(){return new Promise((t,e)=>{this.image=new Image,this.image.onload=()=>{this.isLoaded=!0,this._updateSpriteWrappers(),t(this)},this.image.onerror=e,this.image.src=this.imagePath})}generateSprites(){let{spriteWidth:t,spriteHeight:e,columns:s,rows:o,sprites:r}=this.spriteData;if(s&&o)for(let n=0;n<o;n++)for(let a=0;a<s;a++){let u=`sprite_${n*s+a}`,y={x:a*t,y:n*e,width:t,height:e};this.sprites.set(u,y)}r&&Object.entries(r).forEach(([n,a])=>{this.sprites.set(n,a)})}_updateSpriteWrappers(){for(let t of this.sprites.keys()){let e=`${this.name}:${t}`,s=f.getSprite(e);s&&(s.image=this.image,s.isLoaded=this.isLoaded)}}_registerIndividualSprites(){for(let t of this.sprites.keys()){let e=`${this.name}:${t}`;f._addSprite(e,this._createSpriteWrapper(t))}console.log(`Registered ${this.sprites.size} sprites from sheet "${this.name}" with colon notation`)}_createSpriteWrapper(t){let e=this.sprites.get(t);return e?{name:`${this.name}:${t}`,image:this.image,isLoaded:this.isLoaded,width:e.width,height:e.height,pivotX:.5,pivotY:.5,sourceX:e.x,sourceY:e.y,sourceWidth:e.width,sourceHeight:e.height,draw:(s,o,r,n,a,h=0,u=1,y=1)=>{if(!this.isLoaded||!this.image)return;let w=n||e.width,S=a||e.height;s.save(),s.translate(o,r),h!==0&&s.rotate(h),s.scale(u,y);let M=-w*.5,C=-S*.5;s.drawImage(this.image,e.x,e.y,e.width,e.height,M,C,w,S),s.restore()},getBounds:(s,o,r,n)=>{let a=r||e.width,h=n||e.height;return{x:s-a*.5,y:o-h*.5,width:a,height:h}}}:null}getSprite(t){return this.sprites.get(t)||null}getSpriteNames(){return Array.from(this.sprites.keys())}drawSprite(t,e,s,o,r,n){if(!this.isLoaded)return;let a=this.getSprite(e);if(!a)return;let h=r||a.width,u=n||a.height;t.drawImage(this.image,a.x,a.y,a.width,a.height,s,o,h,u)}};var U=class extends l{constructor(t,e=null,s=null){super(),this.src=t,this.image=null,this.width=e,this.height=s}async preload(){return new Promise(t=>{let e=new Image;e.src=this.src,e.onload=()=>{this.image=e,this.width===null&&(this.width=e.width),this.height===null&&(this.height=e.height),t()}})}draw(t){if(this.image){let e=this.gameObject.getGlobalX(),s=this.gameObject.getGlobalY();t.drawImage(this.image,e,s,this.width,this.height)}}};var X=class extends l{constructor(t,e={width:10,height:10,color:"white"}){super(),this.shape=t,this.options=e}get color(){return this.options.color||"black"}set color(t){this.options.color=t}get width(){return this.options.width||10}set width(t){this.options.width=t}get height(){return this.options.height||10}set height(t){this.options.height=t}get radius(){return this.options.radius||10}set radius(t){this.options.radius=t}get radiusX(){return this.options.radiusX||10}set radiusX(t){this.options.radiusX=t}get radiusY(){return this.options.radiusY||5}set radiusY(t){this.options.radiusY=t}get points(){return this.options.points||[]}set points(t){this.options.points=t}get x2(){return this.options.x2||this.gameObject.getGlobalX()+10}set x2(t){this.options.x2=t}get y2(){return this.options.y2||this.gameObject.getGlobalY()}set y2(t){this.options.y2=t}get size(){return this.options.size||20}set size(t){this.options.size=t}__draw(t){let e=this.gameObject.getGlobalX(),s=this.gameObject.getGlobalY();switch(this.shape){case"rectangle":case"square":this.drawRect(t,e,s);break;case"circle":this.drawCircle(t,e,s);break;case"ellipse":this.drawEllipse(t,e,s);break;case"line":this.drawLine(t,e,s);break;case"triangle":this.drawTriangle(t,e,s);break;case"polygon":this.drawPolygon(t,e,s);break;default:this.drawRect(t,e,s);break}}drawRect(t,e,s){let{width:o=10,height:r=10,color:n="black"}=this.options;t.fillStyle=n,t.fillRect(e,s,o,r)}drawCircle(t,e,s){let{radius:o=10,color:r="black"}=this.options;t.beginPath(),t.arc(e,s,o,0,Math.PI*2),t.fillStyle=r,t.fill()}drawEllipse(t,e,s){let{radiusX:o=10,radiusY:r=5,color:n="black"}=this.options;t.beginPath(),t.ellipse(e,s,o,r,0,0,Math.PI*2),t.fillStyle=n,t.fill()}drawLine(t,e,s){let{x2:o=e+10,y2:r=s,color:n="black",width:a=2}=this.options;t.strokeStyle=n,t.lineWidth=a,t.beginPath(),t.moveTo(e,s),t.lineTo(o,r),t.stroke()}drawTriangle(t,e,s){let{size:o=20,color:r="black"}=this.options;t.fillStyle=r,t.beginPath(),t.moveTo(e,s),t.lineTo(e+o,s),t.lineTo(e+o/2,s-o),t.closePath(),t.fill()}drawPolygon(t,e,s){let{points:o=[],color:r="black"}=this.options;if(!(o.length<3)){t.fillStyle=r,t.beginPath(),t.moveTo(e+o[0][0],s+o[0][1]);for(let n=1;n<o.length;n++)t.lineTo(e+o[n][0],s+o[n][1]);t.closePath(),t.fill()}}};var P=class i extends p{constructor(t=null,e=!1){super(),this.radius=t,this.trigger=e}checkCollisionWith(t){if(t instanceof i){let e=this.getBounds(),s=t.getBounds(),o=e.x-s.x,r=e.y-s.y;return Math.hypot(o,r)<e.radius+s.radius}else return this.circleBoxCollision(t)}circleBoxCollision(t){let e=this.getBounds(),s=t.getBounds(),o=Math.max(s.x,Math.min(e.x,s.x+s.width)),r=Math.max(s.y,Math.min(e.y,s.y+s.height)),n=e.x-o,a=e.y-r;return n*n+a*a<e.radius*e.radius}getBounds(){let t=this.gameObject.getGlobalX(),e=this.gameObject.getGlobalY(),s=this.radius,o=this.gameObject.getComponent(x)?.sprite;return s===null&&o&&(s=o.width/2),{x:t,y:e,radius:s}}};var Y=class i extends p{constructor(t=null,e=null,s=!1){super(),this.width=t,this.height=e,this.trigger=s}checkCollisionWith(t){return t instanceof i?this.checkBoxBoxCollision(t):t instanceof P?t.checkCollisionWith(this):!1}checkBoxBoxCollision(t){let e=this.getBounds(),s=t.getBounds(),o=.01;return e.x<s.x+s.width+o&&e.x+e.width+o>s.x&&e.y<s.y+s.height+o&&e.y+e.height+o>s.y}getBounds(){let t=this.gameObject.getGlobalX(),e=this.gameObject.getGlobalY(),s=this.width,o=this.height,r=this.gameObject.getComponent(x)?.sprite;return(s===null||o===null)&&r&&(s=s??r.width,o=o??r.height),{x:t,y:e,width:s,height:o}}};var A=class{static range(t,e){return Math.floor(Math.random()*(e-t+1)+t)}};var I=class extends l{constructor(t){super(),this.target=t}update(){this.target&&(this.gameObject.x=this.target.x)}};return _(J);})();

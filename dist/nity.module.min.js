var n=class{constructor(){this.gameObject=null,this.enabled=!0,this._started=!1}start(){}update(t){}draw(t){}async preload(){}destroy(){}lateUpdate(t){}};var y=class{constructor(t,e=[],s=10,i=!0){this.name=t,this.spriteNames=e,this.fps=s,this.loop=i}};var f=class{constructor(){this.sheets=new Map}add(t){this.sheets.set(t.name,t)}async preload(){for(let t of this.sheets.values())await t.load()}getSheet(t){return this.sheets.get(t)}};var g=class extends n{constructor(t,e=1){super(),this.canvas=t,this.zoom=e}applyTransform(t){let e=this.gameObject.getGlobalX(),s=this.gameObject.getGlobalY();t.setTransform(this.zoom,0,0,this.zoom,-e*this.zoom+this.canvas.width/2,-s*this.zoom+this.canvas.height/2)}};var c=class r{static keys=new Set;static initialize(){window.addEventListener("keydown",t=>r.keys.add(t.key)),window.addEventListener("keyup",t=>r.keys.delete(t.key))}static isKeyDown(t){return r.keys.has(t)}};var h=class extends n{constructor(){super(),this.trigger=!1,this._lastCollisions=new Set}isTrigger(){return this.trigger===!0}start(){l.instance.register(this)}destroy(){l.instance.unregister(this)}checkCollisionWith(t){throw new Error("checkCollisionWith must be implemented")}getBounds(){throw new Error("getBounds must be implemented")}};var l=class r{constructor(){this.colliders=new Set,r.instance=this}register(t){this.colliders.add(t)}unregister(t){this.colliders.delete(t)}update(){for(let t of this.colliders)for(let e of this.colliders)t!==e&&(this.intersects(t,e)?t._lastCollisions.has(e)?(t.isTrigger()?t.gameObject.onTriggerStay?.(e.gameObject):t.gameObject.onCollisionStay?.(e.gameObject),e.isTrigger()?e.gameObject.onTriggerStay?.(t.gameObject):e.gameObject.onCollisionStay?.(t.gameObject)):(t._lastCollisions.add(e),t.isTrigger()?t.gameObject.onTriggerEnter?.(e.gameObject):t.gameObject.onCollisionEnter?.(e.gameObject),e.isTrigger()?e.gameObject.onTriggerEnter?.(t.gameObject):e.gameObject.onCollisionEnter?.(t.gameObject)):t._lastCollisions.has(e)&&(t._lastCollisions.delete(e),t.isTrigger()?t.gameObject.onTriggerExit?.(e.gameObject):t.gameObject.onCollisionExit?.(e.gameObject),e.isTrigger()?e.gameObject.onTriggerExit?.(t.gameObject):e.gameObject.onCollisionExit?.(t.gameObject)))}intersects(t,e){return t instanceof h&&e instanceof h?t.checkCollisionWith(e):(console.warn("INTERNAL_ERROR:At least one object is not an collider component:",t,e),!1)}};l.instance=void 0;var p=class r{#t=!1;constructor(t){r.instance=this,this.canvas=t,this.ctx=t.getContext("2d"),this.scene=null,this.lastTime=0,this.mainCamera=null,this.spriteRegistry=new f,this.#t=!1,new l}launch(t){if(!t)throw new Error("No scene assigned to game.");this.#r(),this.#o(t)}async#o(t){await this.loadScene(t),this.start()}async loadScene(t){if(!t)throw new Error("No scene provided.");this.scene=t,typeof t._create=="function"&&(t._create(t),t._create=null),await this.spriteRegistry.preload(),await this.scene.preload(),await this.scene.start(),this.start()}start(){c.initialize(),this.#e(),requestAnimationFrame(this.loop.bind(this))}loop(t){let e=(t-this.lastTime)/1e3;if(e>.1&&(e=.1),this.lastTime=t,this.ctx.setTransform(1,0,0,1,0,0),this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),!this.#t){if(this.scene.update(e),this.mainCamera){let s=this.mainCamera.getComponent(g);s&&s.applyTransform(this.ctx)}this.scene.draw(this.ctx)}requestAnimationFrame(this.loop.bind(this))}#s(){this.#t!==!0&&(this.#t=!0,console.log("Game fullscale pause"))}#i(){this.#t!==!1&&(this.#t=!1,this.lastTime=performance.now(),console.log("Game fullscale resume"))}#e(){document.addEventListener("visibilitychange",()=>{document.hidden?this.#s():this.#i()})}#r(){if(!this.canvas){console.warn("No canvas element provided.");return}this.ctx||console.error("Failed to get 2D context from canvas."),this.ctx.imageSmoothingEnabled=!1,this.ctx.mozImageSmoothingEnabled=!1,this.ctx.webkitImageSmoothingEnabled=!1}};var m=class extends n{constructor(t,e){super(),this.sheetName=t,this.spriteName=e,this.sprite=null}preload(){let t=p.instance.spriteRegistry.getSheet(this.sheetName);if(!t)throw new Error(`Spritesheet '${this.sheetName}' not found.`);if(this.sprite=t.getSprite(this.spriteName),!this.sprite)throw new Error(`Sprite '${this.spriteName}' not found in sheet '${this.sheetName}'.`)}draw(t){if(!this.sprite)return;let e=this.gameObject.getGlobalX(),s=this.gameObject.getGlobalY();t.drawImage(this.sprite.image,this.sprite.x,this.sprite.y,this.sprite.width,this.sprite.height,e,s,this.sprite.width,this.sprite.height)}};var w=class extends n{constructor(t,e=null){super(),this.sheetName=t,this.clips=new Map,this.currentClip=null,this.currentFrame=0,this.autoPlay=!0,this.time=0,this.defaultClipName=e}start(){this.autoPlay&&this.defaultClipName&&this.play(this.defaultClipName)}addClip(t){this.clips.set(t.name,t)}play(t){let e=this.clips.get(t);if(!e)throw new Error(`Animation clip '${t}' not found.`);this.currentClip=e,this.currentFrame=0,this.time=0,this._applyFrame()}update(t){if(!this.currentClip)return;this.time+=t;let e=1/this.currentClip.fps;if(this.time>=e){if(this.time-=e,this.currentFrame++,this.currentFrame>=this.currentClip.spriteNames.length)if(this.currentClip.loop)this.currentFrame=0;else{this.currentFrame=this.currentClip.spriteNames.length-1;return}this._applyFrame()}}_applyFrame(){let t=this.currentClip.spriteNames[this.currentFrame],e=this.gameObject.getComponent(m);e&&(e.sprite=p.instance.spriteRegistry.getSheet(this.sheetName).getSprite(t))}};var C=class{constructor(t=0,e=0){this.x=t,this.y=e,this.components=[],this.children=[],this.parent=null,this.name="",this.tags=new Set,this.paused=!1}addComponent(t){if(!(t instanceof n))throw new Error('addComponent: property "component" must be an instance of Component');if(this.getComponent(t.constructor))throw new Error(`Component of type ${t.constructor.name} already exists on this GameObject.`);t.gameObject=this,this.components.push(t),t.start?.()}getComponent(t){if(typeof t!="function"||!t.prototype)throw new Error('getComponent: property "type" must be a class');return this.components.find(e=>e instanceof t)}hasComponent(t){if(typeof t!="function"||!t.prototype)throw new Error('hasComponent: property "type" must be a class');return!!this.getComponent(t)}removeComponent(t){let e=this.components.findIndex(s=>s instanceof t);e!==-1&&(this.components[e].destroy?.(),this.components.splice(e,1))}hasTag(t){return this.tags.has(t)}addTag(t){this.tags.add(t)}addChild(t){this.children.push(t),t.parent=this}getGlobalX(){return this.parent?this.x+this.parent.getGlobalX():this.x}getGlobalY(){return this.parent?this.y+this.parent.getGlobalY():this.y}async preload(){let t=this.components.map(e=>e.preload?.());for(let e of this.children)t.push(e.preload?.());await Promise.all(t)}update(t){if(!this.paused){for(let e of this.components)e.enabled&&typeof e.update=="function"&&e.update(t);for(let e of this.children)e.update(t)}}lateUpdate(t){if(!this.paused){for(let e of this.components)e.enabled&&typeof e.lateUpdate=="function"&&e.lateUpdate(t);for(let e of this.children)e.lateUpdate(t)}}onCollisionEnter(t){for(let e of this.components)typeof e.onCollisionEnter=="function"&&e.onCollisionEnter(t)}onCollisionStay(t){for(let e of this.components)typeof e.onCollisionStay=="function"&&e.onCollisionStay(t)}onCollisionExit(t){for(let e of this.components)typeof e.onCollisionExit=="function"&&e.onCollisionExit(t)}draw(t){if(!this.paused){for(let e of this.components)e.enabled&&typeof e.draw=="function"&&e.draw(t);for(let e of this.children)e.draw(t)}}};var x=class{constructor({create:t}={}){this.objects=[],this._create=t}add(t){this.objects.push(t)}findByName(t){return this.objects.find(e=>e.name===t)}findByTag(t){return this.objects.filter(e=>e.hasTag(t))}async preload(){typeof this._create=="function"?(this._create(this),this._create=null):console.log("Empty scene loaded");let t=this.objects.map(e=>e.preload?.());await Promise.all(t)}async start(){for(let t of this.objects)typeof t.start=="function"&&t.start()}update(t){for(let e of this.objects)typeof e.update=="function"&&e.update(t);l.instance?.update();for(let e of this.objects)typeof e.lateUpdate=="function"&&e.lateUpdate(t)}draw(t){for(let e of this.objects)e.draw(t)}};var u=class extends n{#t;#o=new Set;#s;#i;#e=!1;constructor(){super()}start(){this.#t=this.gameObject.getComponent(h),this.#t||console.warn("RigidbodyComponent requires a Collider component to function properly.")}move(t,e){this.#s=this.gameObject.x,this.#i=this.gameObject.y,this.gameObject.x+=t,this.gameObject.y+=e,this.#e=!0}onCollisionEnter(t){if(!this.#e||!this.#t||t===this.#t)return;let e=t.getComponent(h);if(!e.isTrigger()&&!this.#t.isTrigger()&&!e.isTrigger()&&this.#t.checkCollisionWith(e)){this.gameObject.x=this.#s,this.gameObject.y=this.#i;return}this.#e=!1}#r(t,e){t.onCollisionEnter?.(e.gameObject)}};var j=class extends n{rigidbody;constructor(t=100){super(),this.speed=t}start(){this.rigidbody=this.gameObject.getComponent(u),this.rigidbody||console.warn("MovementComponent requires RigidbodyComponent to function properly.")}update(t){let e=0,s=0;c.isKeyDown("ArrowRight")&&(e+=this.speed*t),c.isKeyDown("ArrowLeft")&&(e-=this.speed*t),c.isKeyDown("ArrowDown")&&(s+=this.speed*t),c.isKeyDown("ArrowUp")&&(s-=this.speed*t),(e!==0||s!==0)&&this.rigidbody.move(e,s)}};var b=class{constructor(t,e,s,i,o){this.image=t,this.x=e,this.y=s,this.width=i,this.height=o}};var O=class{constructor(t,e,s,i,o,a){this.name=t,this.src=e,this.image=null,this.frameWidth=s,this.frameHeight=i,this.cols=o,this.rows=a,this.sprites=new Map,p.instance.spriteRegistry.add(this)}async load(){return new Promise((t,e)=>{let s=new Image;s.src=this.src,s.onload=()=>{this.image=s;for(let i=0;i<this.rows;i++)for(let o=0;o<this.cols;o++){let a=`sprite_${o}_${i}`,d=new b(s,o*this.frameWidth,i*this.frameHeight,this.frameWidth,this.frameHeight);this.sprites.set(a,d)}t()},s.onerror=()=>{e(new Error(`Failed to load image: ${this.src}`))}})}getSprite(t){return this.sprites.get(t)}};var E=class extends n{constructor(t){super(),this.src=t,this.image=null}async preload(){return new Promise(t=>{let e=new Image;e.src=this.src,e.onload=()=>{this.image=e,t()}})}draw(t){if(this.image){let e=this.gameObject.getGlobalX(),s=this.gameObject.getGlobalY();t.drawImage(this.image,e,s)}}};var T=class extends n{constructor(t,e={width:10,height:10,color:"white"}){super(),this.shape=t,this.options=e}get color(){return this.options.color||"black"}set color(t){this.options.color=t}get width(){return this.options.width||10}set width(t){this.options.width=t}get height(){return this.options.height||10}set height(t){this.options.height=t}get radius(){return this.options.radius||10}set radius(t){this.options.radius=t}get radiusX(){return this.options.radiusX||10}set radiusX(t){this.options.radiusX=t}get radiusY(){return this.options.radiusY||5}set radiusY(t){this.options.radiusY=t}get points(){return this.options.points||[]}set points(t){this.options.points=t}get x2(){return this.options.x2||this.gameObject.getGlobalX()+10}set x2(t){this.options.x2=t}get y2(){return this.options.y2||this.gameObject.getGlobalY()}set y2(t){this.options.y2=t}get size(){return this.options.size||20}set size(t){this.options.size=t}draw(t){let e=this.gameObject.getGlobalX(),s=this.gameObject.getGlobalY();switch(this.shape){case"rectangle":case"square":this.drawRect(t,e,s);break;case"circle":this.drawCircle(t,e,s);break;case"ellipse":this.drawEllipse(t,e,s);break;case"line":this.drawLine(t,e,s);break;case"triangle":this.drawTriangle(t,e,s);break;case"polygon":this.drawPolygon(t,e,s);break;default:this.drawRect(t,e,s);break}}drawRect(t,e,s){let{width:i=10,height:o=10,color:a="black"}=this.options;t.fillStyle=a,t.fillRect(e,s,i,o)}drawCircle(t,e,s){let{radius:i=10,color:o="black"}=this.options;t.beginPath(),t.arc(e,s,i,0,Math.PI*2),t.fillStyle=o,t.fill()}drawEllipse(t,e,s){let{radiusX:i=10,radiusY:o=5,color:a="black"}=this.options;t.beginPath(),t.ellipse(e,s,i,o,0,0,Math.PI*2),t.fillStyle=a,t.fill()}drawLine(t,e,s){let{x2:i=e+10,y2:o=s,color:a="black",width:d=2}=this.options;t.strokeStyle=a,t.lineWidth=d,t.beginPath(),t.moveTo(e,s),t.lineTo(i,o),t.stroke()}drawTriangle(t,e,s){let{size:i=20,color:o="black"}=this.options;t.fillStyle=o,t.beginPath(),t.moveTo(e,s),t.lineTo(e+i,s),t.lineTo(e+i/2,s-i),t.closePath(),t.fill()}drawPolygon(t,e,s){let{points:i=[],color:o="black"}=this.options;if(!(i.length<3)){t.fillStyle=o,t.beginPath(),t.moveTo(e+i[0][0],s+i[0][1]);for(let a=1;a<i.length;a++)t.lineTo(e+i[a][0],s+i[a][1]);t.closePath(),t.fill()}}};var k=class r extends h{constructor(t=null,e=null,s=!1){super(),this.width=t,this.height=e,this.trigger=s}checkCollisionWith(t){return t instanceof r?this.checkBoxBoxCollision(t):t instanceof CircleColliderComponent?t.checkCollisionWith(this):!1}checkBoxBoxCollision(t){let e=this.getBounds(),s=t.getBounds();return e.x<s.x+s.width&&e.x+e.width>s.x&&e.y<s.y+s.height&&e.y+e.height>s.y}getBounds(){let t=this.gameObject.getGlobalX(),e=this.gameObject.getGlobalY(),s=this.width,i=this.height,o=this.gameObject.getComponent(m)?.sprite;return(s===null||i===null)&&o&&(s=s??o.width,i=i??o.height),{x:t,y:e,width:s,height:i}}};var S=class r extends h{constructor(t=null,e=!1){super(),this.radius=t,this.trigger=e}checkCollisionWith(t){if(t instanceof r){let e=this.getBounds(),s=t.getBounds(),i=e.x-s.x,o=e.y-s.y;return Math.hypot(i,o)<e.radius+s.radius}else return this.circleBoxCollision(t)}circleBoxCollision(t){let e=this.getBounds(),s=t.getBounds(),i=Math.max(s.x,Math.min(e.x,s.x+s.width)),o=Math.max(s.y,Math.min(e.y,s.y+s.height)),a=e.x-i,d=e.y-o;return a*a+d*d<e.radius*e.radius}getBounds(){let t=this.gameObject.getGlobalX(),e=this.gameObject.getGlobalY(),s=this.radius,i=this.gameObject.getComponent(m)?.sprite;return s===null&&i&&(s=i.width/2),{x:t,y:e,radius:s}}};function Et(){console.log("Hello from Nity Game Engine!")}export{k as BoxColliderComponent,g as CameraComponent,S as CircleColliderComponent,n as Component,p as Game,C as GameObject,E as ImageComponent,c as Input,j as MovementComponent,u as RigidbodyComponent,x as Scene,T as ShapeComponent,b as Sprite,y as SpriteAnimationClip,w as SpriteAnimationComponent,f as SpriteRegistry,m as SpriteRendererComponent,O as Spritesheet,Et as helloNity};
